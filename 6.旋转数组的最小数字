题目描述
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
思路：
定义一个中间指针，左指针和右指针。
原数组事非减排序，经过旋转后的数组中出现mid所指的元素比上一个元素要小，则说明mid元素是最小的，否则 判断 如果mid所指向的元素大于等于right指针指向的
元素，则最小元素在右边，left = mid+1,否则的话，right = mid -1.利用一个循环，双指针，left<=right

代码：

# -*- coding:utf-8 -*-
class Solution:
    def minNumberInRotateArray(self, rotateArray):
        # write code here
        if not rotateArray:
            return None
        left = 0
        right = len(rotateArray)-1
        while left <= right:
            mid = (left + right) >> 1
            if rotateArray[mid] < rotateArray[mid-1]:
                return rotateArray[mid]
            if rotateArray[mid] < rotateArray[right]:
                right = mid - 1
            else:
                left = mid + 1
        return rotateArray[mid]   #退出循环时，返回mid所指的元素。
