题目描述
操作给定的二叉树，将其变换为源二叉树的镜像。

思路
利用递归，当root为空时，返回None。如果root没有左右子树，只有一个根节点，直接返回根节点root即可。当root有左子树或者是右子树时，
需要先分别将左子树和右子树进行递归镜像。然后再将root的左子树和右子树的根节点左右调换，并返回root即可。
# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def Mirror(self,root):
        if not root:
            return None
        if not root.left and not root.right:
            return root
        self.Mirror(root.left)
        self.Mirror(root.right)
        root.left,root.right = root.right,root.left
        return root
