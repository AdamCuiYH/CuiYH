题目描述
在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

思路
由于这是一个二维数组，且从行的角度来看，从左到右依次增加，即同一行右边的比左边的要大；从列的角度来看从上到下依次递增，即同一列下边的值要比上边的值要大。因此，有两种思考的角度：第一，是从整个二维数组的右上角出发，找到二维数组左上角的值，要寻找的整数如果比当前的数组中的值要小，就往左移动一个位置（行）；如果要找的整数比当前的数组中的值要大，那么就往下移动（列）。第二，是从数组的左下角出发，大了往左，小了往右。

代码：
# -*- coding:utf-8 -*-
class Solution:
    # array 二维列表
    def Find(self, target, array):
        # write code here
        rows = len(array)
        cols = len(array[0])
        i = 0
        j = cols - 1
        while i <= rows-1 and j >= 0:
            if array[i][j] == target:
                return True
            elif array[i][j] > target:
                j -= 1
            else:
                i += 1
        return False
