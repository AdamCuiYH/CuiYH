题目描述
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。
思路：
二叉搜索树的特点：
当根节点的左子树不为空时，则左子树上的所有节点值都小于根节点的值，又子树不为空时，右子树上的所有节点的值都大于根节点的值，且左右子树也是二叉搜索树，。
后序遍历：左右根
数组的最后一个元素时后续二叉搜索树的根节点，因此可以将数组分为2个部分，一个部分小于根节点的值，另一个部分大于根节点的值，然后递归调用函数判断左右子树的
情况，最后返回。
代码：
class Solution:
	def VerifySquenceOfBST(self,sequence):
		if not sequence:
			return False
		root = sequence[-1]
		length = len(sequence)
		for i in range(length):
			if sequence[i] > root:
				break
		for j in range(i,length):
			if sequence[j] < root:
				return False
		left = right =True
		if i > 0:
			left = self.VerifySquenceOfBST(sequence[0:i])
		if i < length - 1 and left:
			right = self.VerifySquenceOfBST(sequence[i,-1])
		return left and right
